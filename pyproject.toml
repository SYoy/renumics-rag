[tool.poetry]
name = "rag-demo"
version = "0.1.0"
description = "Retrieval-augmented generation assistant demo"
authors = ["Renumics GmbH <info@renumics.com>"]
license = "MIT"
readme = "README.md"
packages = [
    { include = "assistant" },
]

[tool.poetry.scripts]
create-db = "assistant.cli.create_db:app"
answer = "assistant.cli.answer:app"
retrieve = "assistant.cli.retrieve:app"

[tool.poetry.dependencies]
python = "^3.8.1, !=3.9.7"
typing-extensions = "^4.9.0"
typer = "^0.9.0"
langchain = "^0.1.3"
langchain-community = "^0.0.15"
langchain-core = "^0.1.15"
chromadb = "^0.4.22"
pysqlite3-binary = {version = "^0.5.2.post2", platform = 'linux'}
beautifulsoup4 = "^4.12.3"
lxml = "^5.1.0"
langchain-openai = {version = "^0.0.3", optional = true}
streamlit = "^1.30.0"

[tool.poetry.extras]
openai = ["langchain-openai"]
all = ["langchain-openai"]

[tool.poetry.group.dev.dependencies]
black = "^23.12.1"
ruff = "^0.1.14"
mypy = "^1.7.1"
pre-commit = "^3.0.1"
sentence-transformers = "^2.2.2"
torch = {version = "^2.1.1+cpu", source = "torch-cpu"}

[[tool.poetry.source]]
name = "torch-cpu"
url = "https://download.pytorch.org/whl/cpu"
priority = "explicit"

[tool.mypy]
ignore_missing_imports = false
disallow_untyped_defs = true
explicit_package_bases = true
mypy_path = "."
plugins = "pydantic.mypy"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
