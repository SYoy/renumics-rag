[tool.poetry]
name = "rag-demo"
version = "0.1.0"
description = "Retrieval-augmented generation assistant demo"
authors = ["Renumics GmbH <info@renumics.com>"]
license = "MIT"
readme = "README.md"
packages = [
    { include = "assistant" },
]

[tool.poetry.scripts]
create-db = "assistant.cli.create_db:app"
answer = "assistant.cli.answer:app"
retrieve = "assistant.cli.retrieve:app"
explore = "assistant.cli.explore:app"
app = "assistant.cli.app:app"

[tool.poetry.dependencies]
python = ">=3.8.1,<3.9.7 || >3.9.7,<3.12"
typing-extensions = "^4.9.0"
typer = "^0.9.0"
langchain = "^0.1.3"
langchain-community = "^0.0.15"
langchain-core = "^0.1.15"
chromadb = "^0.4.22"
pysqlite3-binary = {version = "^0.5.2.post2", platform = 'linux'}
beautifulsoup4 = "^4.12.3"
lxml = "^5.1.0"
streamlit = "^1.30.0"
pyyaml = "^6.0.1"
pydantic = "^2.5.3"
langchain-openai = {version = "^0.0.3", optional = true}
transformers = {version = "^4.37.1", optional = true}
bitsandbytes = {version = "^0.42.0", optional = true}
unstructured = "^0.11.8"
markdown = "^3.5.2"

[tool.poetry.extras]
openai = ["langchain-openai"]
hf = ["transformers", "bitsandbytes"]
all = ["langchain-openai", "transformers", "bitsandbytes"]

[tool.poetry.group.dev.dependencies]
black = "^23.12.1"
ruff = "^0.1.14"
mypy = "^1.7.1"
pre-commit = "^3.0.1"
pandas-stubs = "^2.0.2.230605"
ipython = "^8.12.3"
types-pyyaml = "^6.0.12.12"
notebook = "^7.0.8"
types-tqdm = "^4.66.0.20240106"

[tool.ruff.lint]
extend-select = [
  "I",
]

[tool.mypy]
ignore_missing_imports = false
disallow_untyped_defs = true

[[tool.mypy.overrides]]
module = [
    "transformers",
    "sentence_transformers"
]
ignore_missing_imports = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
